services:
    _defaults:
        autowire: false
        autoconfigure: false
        public: false

    Jav\ApiTopiaBundle\Loader\RouteLoader:
        tags: [ routing.loader ]

    Jav\ApiTopiaBundle\Rest\RequestHandler:
        arguments: [ !tagged_locator { tag: 'apitopia.resolver' }, '@Jav\ApiTopiaBundle\Serializer\Serializer' ]
        tags: [ controller.service_arguments ]

    Jav\ApiTopiaBundle\GraphQL\RequestHandler:
        arguments: [ '@Jav\ApiTopiaBundle\GraphQL\SchemaBuilder']
        tags: [ controller.service_arguments ]

    Jav\ApiTopiaBundle\Command\BuildSchemaCommand:
        arguments: [ '@Jav\ApiTopiaBundle\GraphQL\SchemaBuilder']
        tags: [ console.command ]

    Jav\ApiTopiaBundle\Serializer\Serializer:
        arguments: [ '@Jav\ApiTopiaBundle\GraphQL\ResourceLoader' ]

    Jav\ApiTopiaBundle\Serializer\UploadedFileDenormalizer:
        tags: [ serializer.normalizer ]

    Jav\ApiTopiaBundle\Controller\:
        resource: '../src/Controller/'
        autowire: true
        autoconfigure: true
        tags: [ 'controller.service_arguments' ]

    Jav\ApiTopiaBundle\GraphQL\SchemaBuilder: ~
    Jav\ApiTopiaBundle\GraphQL\ResourceLoader: ~
    Jav\ApiTopiaBundle\GraphQL\Client: ~
    Jav\ApiTopiaBundle\GraphQL\ResolverProvider:
        arguments: [ !tagged_locator { tag: 'apitopia.graphql_resolver' }, '@Jav\ApiTopiaBundle\Serializer\Serializer' ]
    Jav\ApiTopiaBundle\GraphQL\TypeResolver:
        arguments: [ '@Jav\ApiTopiaBundle\GraphQL\ResourceLoader', '@Jav\ApiTopiaBundle\GraphQL\ResolverProvider' ]
